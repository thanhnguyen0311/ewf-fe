name: Build and Deploy to VPS

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
          elif [ -f yarn.lock ]; then
            echo "Using yarn install"
            yarn install --frozen-lockfile
          else
            echo "Using npm install"
            npm install
          fi

  run-linting:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}

      - name: Run linting
        run: |
          if npm run | grep -q "lint"; then
            npm run lint
          else
            echo "No lint script found. Skipping."
          fi
        continue-on-error: true

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}

      - name: Run tests
        run: |
          echo "Running tests..."
          if npm run | grep -q "test"; then
            npm test -- --ci --watchAll=false
          else
            echo "No test script found. Skipping."
          fi
        env:
          CI: true

  generate-env:
    runs-on: ubuntu-latest
    needs: [run-linting, run-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate production .env file
        run: |
          echo "Generating .env file..."
          echo "REACT_APP_API_URL=/api" > .env
          echo "HOST=127.0.0.1" >> .env
          echo "Generated .env file:"
          cat .env

      - name: Verify .env file existence
        run: |
          if [ -f .env ]; then
            echo ".env file exists."
          else
            echo "Error: .env file not found!"
            exit 1
          fi

      - name: Upload .env artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: .env

  build:
    runs-on: ubuntu-latest
    needs: [generate-env]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      - name: Verify .env file in build
        run: |
          echo "Checking for .env:"
          cat .env || echo "Error: cannot find .env during build!"

      - name: Build the application
        run: npm run build